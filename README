MALLOC PROJECT
--------------
A basic  malloc implemented using best fit and first fit algorithm. 

DEPENDENCIE: 
		sys/man.h library
		malloc.h

FUNCTION DESCRIPTION: 

NAME
		malloc calloc realloc -- allocate memory by block 
		free -- freed memory block 
LIBRARY 
		malloc.h
SYNOPSIS
		void *
		------ malloc(void *ptr); 
		------ realloc(void *ptr, size_t size); 
		------ calloc(size_t, size_t);

		void
		------ free(void *ptr); 

DESCRIPTION:
		Malloc function use best fit combine with first fit algorithm depending on
		the asking size.
		Malloc takes one argument a size. This size is align on 4 bytes if it's not.

		Calloc take two sizes the first is the type size and the second the number of
		elment of this size you want to allocate. Calloc set the memory block at 0; 

		realloc this function tries to change the size of the old memory block
		pointed by ptr. size is the new reallocated block size that we want. 
		If you pass a NULL value to realloc and a size, if this size is zero realloc
		allocates a 8 memory block else if a greater size is given  a pointer on
		an align block of the asking size is return.   

		free take a pointer in 
		
RETURN VALUE 
		If successful, malloc, calloc, realloc return a pointer to allocated momery
		block. In other case a NULL pointer. 

NOTE
		Malloc function doesn't free NULL pointer and if a zero size is given malloc
		return a 8 size block; 

OTHERS FUNCTION : 

LIBRARY 
		tools.h
SYNOPSIS
		void *
		-------
		   find_block(size_t size); 
			 find_page(size_t size); 
  void
	-----
				segment_page(size_t size, pt_page_h head)
DESCRIPTION
				FIND_PAGE this function is used for big allocation, if the user asked
				for a block greater than 512 bytes, FIND_PAGE allocate a PAGE_SIZE bytes
						of memory and return a pointer on this area. 

				FIND_BLOCK this function search a free block in a page. The size
				argument is between 0 or 512 bytes. if FIND_BLOCK find a free block it
				return a pointer on this block. 

				SEGMENT_PAGE segment a page pointed by head (aka struct page*) in block
				of size size. 

RETURN VALUE
				return ptr on the memory block else return NULL if (mmap) function
				return -1 (NO MEMORY)
		
